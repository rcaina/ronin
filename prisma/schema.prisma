// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    // NOTE: When using mysql or sqlserver, uncomment the @db.Text annotations in model Account below
    // Further reading:
    // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
    // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
    url      = env("DATABASE_URL")
}

model Account {
    id        String   @id @default(cuid())
    name      String
    users     User[]
    budgets   Budget[]
    deleted   Boolean  @default(false)
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@index([id])
    @@index([name])
    @@index([deleted])
    @@map("accounts")
}

model User {
    id            String    @id @default(cuid())
    name          String
    firstName     String
    lastName      String
    email         String?   @unique
    password      String?
    emailVerified DateTime?
    role          Role?
    phone         String?
    image         String?
    accountId     String
    account       Account   @relation(fields: [accountId], references: [id])
    cards         Card[]
    deleted       Boolean   @default(false)
    createdAt     DateTime  @default(now())
    updatedAt     DateTime  @updatedAt
    sessions      Session[]

    @@index([email])
    @@index([name])
    @@index([role])
    @@index([accountId])
    @@map("users")
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
    @@map("verification_tokens")
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@index([userId])
    @@map("sessions")
}

model Budget {
    id         String     @id @default(cuid())
    name       String
    type       BudgetType
    period     PeriodType
    income     Float
    categories Category[]
    deleted    Boolean    @default(false)
    createdAt  DateTime   @default(now())
    updatedAt  DateTime   @updatedAt
    accountId  String
    account    Account    @relation(fields: [accountId], references: [id])

    @@index([id])
    @@index([name])
    @@index([type])
    @@index([period])
    @@index([income])
    @@index([deleted])
    @@map("budgets")
}

model Category {
    id            String        @id @default(cuid())
    name          String
    spendingLimit Float
    budgetId      String
    budget        Budget        @relation(fields: [budgetId], references: [id])
    transactions  Transaction[]
    deleted       Boolean       @default(false)
    createdAt     DateTime      @default(now())
    updatedAt     DateTime      @updatedAt

    @@index([id])
    @@index([name])
    @@index([deleted])
    @@map("categories")
}

model Card {
    id            String   @id @default(cuid())
    name          String
    userId        String
    user          User     @relation(fields: [userId], references: [id])
    cardType      CardType
    amountSpent   Float?
    spendingLimit Float?
    deleted       Boolean  @default(false)
    createdAt     DateTime @default(now())
    updatedAt     DateTime @updatedAt

    @@index([id])
}

model Transaction {
    id         String   @id @default(cuid())
    amount     Float
    date       DateTime
    categoryId String
    category   Category @relation(fields: [categoryId], references: [id])
    deleted    Boolean  @default(false)
    createdAt  DateTime @default(now())
    updatedAt  DateTime @updatedAt

    @@index([id])
    @@index([amount])
    @@index([date])
    @@index([deleted])
    @@map("transactions")
}

enum Role {
    ADMIN
    MEMBER
}

enum BudgetType {
    ZERO_SUM
    PERCENTAGE
}

enum PeriodType {
    WEEKLY
    MONTHLY
    QUARTERLY
    YEARLY
    ONE_TIME
}

enum CardType {
    DEBIT
    CREDIT
    BUSINESS_DEBIT
    BUSINESS_CREDIT
}
